
user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;
	
	#响应数据的来源
	upstream tomcats { 
			server 192.168.56.100:8080 weight=1;
			server 192.168.56.100:8082 weight=1;
			server 192.168.56.100:8083 weight=1;
	}
    server {
        listen       80;
        server_name  Nginx;
		
		#静态资源,nginx自己处理
		location ~ .*\.(html|js|css|gif|jpg|jpeg|png)$ {
			#过期3天，静态文件不怎么更新，过期可以设大一点
			expires 3d;
		}
		#配置反向代理
		#动态资源
		location ~ .*\.(jsp|do|action)$ {
			proxy_pass http://tomcats;
		}
		#location ~ .* {
		#		proxy_pass http://tomcats;
		#}
		
        #charset koi8-r;

        #access_log  logs/host.access.log  main;
		
        location / {
            root   html;
            index  index.html index.htm;
        }
		
		

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }
    #include /etc/nginx/conf.d/*.conf;
}
